/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         steadyState;
}

gradSchemes
{
//      default         cellLimited Gauss linear 1;
    default         Gauss linear;
}

divSchemes
{
    default         none;
    div(phi,U)     bounded Gauss linearUpwindV grad(U); //bounded Gauss upwind; //limitedLinear 1;
    div(phi,K)      bounded Gauss upwind; //limitedLinear 1;
    div(phi,h)      bounded Gauss upwind; //limitedLinear 1;
    div(phi,k)      bounded Gauss upwind; //limitedLinear 1;
    div(phi,epsilon) bounded Gauss upwind; //limitedLinear 1;
    div(phi,omega) bounded Gauss upwind; //limitedLinear 1;
    div((muEff*dev2(T(grad(U))))) Gauss linear;
    div(phi,Ekp) bounded Gauss upwind; //limitedLinear 1;
    div(phi,e) bounded Gauss upwind; //limitedLinear 1;
    div(phi,T)      bounded Gauss upwind; //limitedLinear 1;
    div((nuEff*dev(T(grad(U))))) Gauss linear;
    div((nuEff*dev2(T(grad(U))))) Gauss linear;
}

laplacianSchemes
{
    default         Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         corrected;
}

fluxRequired
{
    default         no;
    p;
    p_rgh;
}
wallDist
{
        method meshWave;
}


// ************************************************************************* //
